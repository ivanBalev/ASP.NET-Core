@using BDInSelfLove.Web.InputModels.ArticleComment
@using Microsoft.AspNetCore.Identity
@using BDInSelfLove.Data.Models

@model BDInSelfLove.Web.ViewModels.ArticleComment.ArticleCommentViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="comment" id="@Model.Id">
    <div class="row">
        <div class="col-md-12 mb-0">
            <div class="card  border-0" id="@Model.Id">
                <div class="card-header bg-white border-0">
                    <div class="media flex-wrap w-100 align-items-center">
                        <img src="@(Model.UserProfilePhoto == null ? "https://res.cloudinary.com/dzcajpx0y/image/upload/c_scale,w_64/v1610826038/User-Profile-PNG-Free-Image_d3npde.png" : Model.UserProfilePhoto)"
                             width="@ViewData["width"]" height="@ViewData["height"]"
                             class="d-block rounded-circle" alt="">
                        <div class="media-body mx-3">
                            <div><span class="userName">@Model.UserUserName</span></div>
                            <div class="text-muted small">@Model.CreatedOn.ToString("dd MMMM yyyy HH:mm")</div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <p class="comment-content">
                    @Html.Raw(Model.ContentWithNoTags)
                    </p>
                    <div class="row">
                        <div class="col">
                            @if (this.SignInManager.IsSignedIn(this.User))
                            {
                        <partial name="_AddCommentPartial" model="@(new ArticleCommentInputModel {
                                                                ArticleId = Model.ArticleId, ParentCommentId = Model.Id })" />

                        <partial name="_ArticleCommentEditPartial" model="@(new ArticleCommentEditInputModel {
                                                ArticleId = Model.ArticleId,  Id = Model.Id, Content = Model.ContentWithNoTags})" />}
                        </div>
                    </div>
                    <div class="row comment-buttons">
                        <div class="col-md-2 m-0 mx-2 p-0">
                            <button type="button" class="btn btn-outline-secondary btn-sm reply-button btn-block">
                                Reply
                            </button>
                        </div>
                        @if (Model.SubComments.Count > 0 && Model.ParentCommentId == null)
                        {
                    <div class="col-md-3 ml-2 m-0 p-0">
                        <button class="btn btn-outline-secondary border-0 btn-sm btn-subcomments">
                            See Subcomments
                        </button>
                    </div>
                    }
                        @if (this.UserManager.GetUserId(this.User) == Model.UserId)
                        {
                    <div class="col-md-2 ml-2 m-0 p-0 align-content-end">
                        <button class="btn btn-outline-warning btn-sm edit-comment-btn">
                            Edit
                        </button>
                    </div>
                    }
                    </div>
                </div>
                @if (@Model.SubComments.Count > 0)
                {
                    this.ViewData["width"] = "40";
                    this.ViewData["height"] = "40";

                    // Make profile pic even smaller when we have 2nd level subcomment
    @if (Model.ParentCommentId != null)
    {
        this.ViewData["width"] = "30";
        this.ViewData["height"] = "30";
    } this.ViewData["subcomment"] = true;

<div class="align-self-end @(this.ViewData["width"].ToString() == "40" ? "main-subcomment" : null)" style="width: 90%">

    @foreach (var item in Model.SubComments)
    {
<partial name="_RecursiveCommentsPartial" model="@item" />}
    @if (Model.ParentCommentId == null)
    {
<button class="btn btn-outline-secondary btn-sm border-0 btn-subcomments hide-subcomments">Hide subcomments</button>}
</div>  }
            </div>
        </div>
    </div>
</div>