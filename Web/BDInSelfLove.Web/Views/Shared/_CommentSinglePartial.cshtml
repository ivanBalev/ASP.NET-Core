@using BDInSelfLove.Web.InputModels.Comment
@using Microsoft.AspNetCore.Identity
@using BDInSelfLove.Data.Models
@using BDInSelfLove.Common

@model BDInSelfLove.Web.ViewModels.Comment.CommentViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer

@{
    // Remove layout when using REST API Request
    if (this.ViewContext.RouteData.Values["controller"].ToString() == "Comments")
    {
        this.Layout = null;
    }

    string commentLevel = "";

    // Profile pic sizing
    if (Model.ParentCommentId == null)
    {
        commentLevel = "main";
        ViewData["width"] = "64";
        ViewData["height"] = "64";
    }
    // Don't enter the 2 cases below if this is an api call
    else if (Model.ParentCommentId != null && ViewData["width"]?.ToString() == "64")
    {
        commentLevel = "firstSub";
        ViewData["width"] = "40";
        ViewData["height"] = "40";
    }
    else if (ViewData["width"]?.ToString() != null)
    {
        commentLevel = "secondSub";
        ViewData["width"] = "30";
        ViewData["height"] = "30";
    }
}

<div id="@Model.Id" class="@(commentLevel)-comment @(commentLevel == "main" ? null : "align-self-end")">
    <div class="row">
        <div class="col-md-12 mb-0">
            <div class="card border-0">
                <div class="card-header bg-white border-0">
                    <div class="media flex-wrap w-100 align-items-center">
                        <img src="@(Model.UserProfilePhoto == null ? "../Custom/img/avatar.png" : Model.UserProfilePhoto)"
                             width="@ViewData["width"]" height="@ViewData["height"]"
                             class="d-block rounded-circle" alt="User profile photo">
                        <div class="media-body mx-3">
                            <div><span class="userName">@Model.UserUserName</span></div>
                            <div class="text-muted small">@Model.CreatedOn.ToString("dd MMMM yyyy HH:mm")</div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <p class="comment-content">
                        @Html.Raw(Model.ContentWithNoTags)
                    </p>
                    <div class="row">
                        <div class="col">
                            @if (this.SignInManager.IsSignedIn(this.User))
                            {
                                <partial name="_CommentAddPartial" model="@(new CommentInputModel {
                                                                    ArticleId = Model.ArticleId, VideoId = Model.VideoId, ParentCommentId = Model.Id })" />

                                <partial name="_CommentEditPartial" model="@(new CommentEditInputModel {
                                                    ArticleId = Model.ArticleId, VideoId = Model.VideoId,  Id = Model.Id, Content = Model.ContentWithNoTags})" />
                            }
                        </div>
                    </div>
                    <div class="row comment-buttons justify-content-between">
                        <div class="col-sm-7">
                            <div class="row">
                                <div class="col-sm-4 m-0 mx-2 p-0">
                                    <button type="button" class="green-btn btn-sm border-0 reply-button px-2">
                                        @localizer["Reply"]
                                    </button>
                                </div>
                                @if (Model.SubComments.Count > 0)
                                {
                                    <div class="col-sm-6 ml-2 m-0 p-0">
                                        <button class="showSubcomments btn btn-sm white-btn">
                                            @localizer["Subcomments"]
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>

                        @if (this.UserManager.GetUserId(this.User) == Model.UserId || this.User.IsInRole(GlobalValues.AdministratorRoleName))
                        {
                            <div class="col-sm-5">
                                <div class="row">
                                    <!-- Edit button only for user's own comments -->
                                    @if (this.UserManager.GetUserId(this.User) == Model.UserId)
                                    {
                                        <div class="col-4 text-right">
                                            <img src="~/Custom/icons/edit-solid.svg" class="edit-btn editCommentBtn" alt="edit button" data-creator="Icon by www.fontawesome.com / https://fontawesome.com/license" />
                                        </div>
                                    }
                                    <!-- Delete comment -->
                                    <div class="col-5 text-left">
                                        <img src="~/Custom/icons/trash-solid.svg" class="delete-btn deleteCommentBtn" alt="delete button" data-creator="Icon by www.fontawesome.com / https://fontawesome.com/license" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                @if (@Model.SubComments.Count > 0)
                {
                    @foreach (var item in Model.SubComments)
                    {
                        <partial name="_CommentSinglePartial" model="@item" />
                    }

                    <button class="hideSubcomments hide-subcomments-btn btn white-btn btn-sm mb-3 ml-3 align-self-start">
                        @localizer["Hide"]
                    </button>
                }
            </div>
        </div>
    </div>
</div>